AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ProjectName:
    Type: String
    Default: securityImmersionDay
    Description: Project name that will be used to name and identify resoures that are created
  keyName: 
    Type: String
    AllowedPattern: ".+"
Mappings:
  RegionMap: 
    eu-central-1:
      "64": "ami-9a91b371"
    eu-west-1:
      "64": "ami-ca0135b3"
    eu-west-2:
      "64": "ami-c12dcda6"
    eu-west-3:
      "64": "ami-cae150b7"
    sa-east-1:
      "64": "ami-f09dcc9c"
    us-east-2:
      "64": "ami-976152f2"
    us-east-1:
      "64": "ami-467ca739"
    us-west-1:
      "64": "ami-46e1f226"
    us-west-2:
      "64": "ami-e251209a"
    ap-northeast-1:
      "64": "ami-92df37ed"
    ap-northeast-2:
      "64": "ami-efaf0181"
    ap-northeast-3:
      "64": "ami-b4faf4c9"
    ap-south-1:
      "64": "ami-b46f48db"
    ap-southeast-1:
      "64": "ami-de90a5a2"
    ap-southeast-2:
      "64": "ami-60a26a02"
    ca-central-1:
      "64": "ami-338a0a57"

Resources:

################### Create VPC to work within ###################

  vpc:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        -
          Key: ProjectName
          Value: !Ref ProjectName
      TemplateURL: https://s3.amazonaws.com/cjl-cloudformation-stack-templates/vpc.yaml

  autoScaleGroup:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        -
          Key: ProjectName
          Value: !Ref ProjectName
      TemplateURL: https://s3.amazonaws.com/cjl-cloudformation-stack-templates/autoScaleGroup.yaml
      Parameters:
        vpcId: !GetAtt vpc.Outputs.vpcId
        subnets: !Join [ ",", [ !GetAtt vpc.Outputs.subnetAId, !GetAtt vpc.Outputs.subnetBId ] ]
        targetgroups: !GetAtt loadBalancer.Outputs.targetgroups
        keyName: !Ref keyName
        DBPassword: vulnerables
        DBServer: !GetAtt database.Outputs.DBServer
        defaultSecurityGroup: !GetAtt vpc.Outputs.DefaultSecurityGroup

  loadBalancer:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        -
          Key: ProjectName
          Value: !Ref ProjectName
      TemplateURL: https://s3.amazonaws.com/cjl-cloudformation-stack-templates/loadBalancer.yaml
      Parameters:
        vpcId: !GetAtt vpc.Outputs.vpcId
        subnets: !Join [ ",", [ !GetAtt vpc.Outputs.subnetAId, !GetAtt vpc.Outputs.subnetBId ] ]

  database:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Tags:
        -
          Key: ProjectName
          Value: !Ref ProjectName
      TemplateURL: https://s3.amazonaws.com/cjl-cloudformation-stack-templates/rds.yaml
      Parameters:
        subnets: !Join [ ",", [ !GetAtt vpc.Outputs.privateSubnetAId, !GetAtt vpc.Outputs.privateSubnetBId ] ]
        DBPassword: vulnerables
        defaultSecurityGroup: !GetAtt vpc.Outputs.DefaultSecurityGroup
        vpcId: !GetAtt vpc.Outputs.vpcId

  cloudTrailRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: "Allow"
            Principal:
              Service:
                - "cloudtrail.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  cloudTrailPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:

        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailCreateLogStream2014110
          Effect: Allow
          Action:
          - logs:CreateLogStream
          Resource:
          - !GetAtt cloudWatchLogGroup.Arn
        - Sid: AWSCloudTrailPutLogEvents20141101
          Effect: Allow
          Action:
          - logs:PutLogEvents
          Resource:
          - !GetAtt cloudWatchLogGroup.Arn
      PolicyName: cloudTrailPolicy
      Roles:
      - !Ref cloudTrailRole

  BucketPolicy: 
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource: 
              !Sub |-
                arn:aws:s3:::${S3Bucket}
          - 
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              !Sub |-
                arn:aws:s3:::${S3Bucket}/AWSLogs/${AWS::AccountId}/*
            Condition: 
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        -
          Key: ProjectName
          Value: !Ref ProjectName

  cloudWatchLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties: 
      LogGroupName: securityWorkshopCloudTrail
      RetentionInDays: 30

  cloudTrail: 
    DependsOn: 
      - BucketPolicy
      - cloudTrailPolicy
    Type: "AWS::CloudTrail::Trail"
    Properties: 
      S3BucketName: !Ref S3Bucket
      IsLogging: true
      CloudWatchLogsRoleArn: !GetAtt cloudTrailRole.Arn
      CloudWatchLogsLogGroupArn: !GetAtt cloudWatchLogGroup.Arn

Outputs:
  s3BucketName:
    Value: !Ref S3Bucket
    Description: The name of the s3 bucket
  dwvaUrl:
    Value: !GetAtt loadBalancer.Outputs.DNSName
    Description: Load balancer address hosting the DVWA
